#!/usr/bin/python

from __future__ import print_function
import os
import re
import sys

# Output usage if argument is missing
try:
        IP = sys.argv[1]
except IndexError:
                print("\nNeeds IP address of the target server")
                print("""
Usage:
        check_roxie <ip-address>
""")
                sys.exit(1)

status = os.popen("2>/dev/null testsocket %s \"<control:alive/>\"" % IP)
status_result = status.read()
roxie_status = re.findall('\<Status\>(.+?)\</Status\>+?', status_result)

# Check if roxie process is up and running
if roxie_status:
        if roxie_status[0] == 'ok':
                # Get state hashes from roxie cluster
                hashes = []
                try:
                        cluster_state = os.popen("2>/dev/null testsocket %s -lock \"<control:state/>\"" % IP)
                        cluster_state_result = cluster_state.readlines()
                        for i in cluster_state_result:
                                if "hash" in i:
                                        state_hash = re.findall("hash=\"(.*?)\"", i)
                                        hashes.append(state_hash[0])
                except:
                        pass

                total_hashes = len(hashes)
                same_hash = []
                different_hash = []
                # Compare hash state between self and cluster
                while total_hashes > 0:
                        local_state = os.popen("2>/dev/null testsocket %s \"<control:state/>\"" % IP)
                        local_state_result = local_state.read()
                        my_hash = re.findall("hash='(.*?)'", local_state_result)
                        for i in hashes:
                                if my_hash[0] == i:
                                        same_hash.append(i)
                                        total_hashes -= 1
                                elif my_hash[0] != i:
                                        different_hash.append(i)
                                        total_hashes -= 1
                        if len(same_hash) < len(different_hash) and my_hash[0] in same_hash:
                                print ("Roxie process is running but there is a state mismatch ",
                                       my_hash[0].replace('\n', ''))
                                sys.exit(1)
                        elif len(same_hash) < len(different_hash) and my_hash[0] not in same_hash:
                                print ("Roxie process is running but there is a state mismatch ",
                                       my_hash[0].replace('\n', ''))
                                sys.exit(1)
                        elif len(same_hash) > len(different_hash) and my_hash[0] in same_hash:
                                print ("Roxie process is running and state hash matches across roxie cluster")
                                sys.exit(0)
                        else:
                                print ("Roxie process is running but roxie cluster appears to have state mismatch")
                                sys.exit(2)
        else:
                print ("Roxie process is down")
                sys.exit(2)

else:
        print ("Roxie process is down")
        sys.exit(2)

